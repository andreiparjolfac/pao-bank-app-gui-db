/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package bankwithguianddb;

import javax.swing.JOptionPane;

/**
 *
 * @author Andrei
 */
public class FilterFields extends javax.swing.JDialog {

    private Filtru filtru;
    /**
     * Creates new form FilterFields
     */
    public FilterFields(java.awt.Frame parent, boolean modal,Filtru filtru) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(parent);
        this.filtru=filtru;
        numeField.setText(filtru.getSearchTerm());
        minAmountField.setText(filtru.getMinValue()+"");
        maxAmountField.setText(filtru.getMaxValue()+"");
        sortButton.setSelected(filtru.getDataAsc());
        tipCombo.removeAllItems();
        tipCombo.addItem("All");
        tipCombo.addItem(TransactionType.Deposit.toString());
        tipCombo.addItem(TransactionType.WithDraw.toString());
        tipCombo.addItem(TransactionType.InitialDeposit.toString());
        tipCombo.addItem(TransactionType.Liquidation.toString());

        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        numeLabel = new javax.swing.JLabel();
        numeField = new javax.swing.JTextField();
        minAmountLabel = new javax.swing.JLabel();
        minAmountField = new javax.swing.JTextField();
        maxAmountLabel = new javax.swing.JLabel();
        maxAmountField = new javax.swing.JTextField();
        sortLabel = new javax.swing.JLabel();
        sortButton = new javax.swing.JRadioButton();
        tipLabel = new javax.swing.JLabel();
        tipCombo = new javax.swing.JComboBox<>();
        OKButton = new javax.swing.JButton();
        CancelButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Filter Fields");
        getContentPane().setLayout(new java.awt.GridLayout(6, 2, 5, 3));

        numeLabel.setText("Nume");
        getContentPane().add(numeLabel);

        numeField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                numeFieldActionPerformed(evt);
            }
        });
        getContentPane().add(numeField);

        minAmountLabel.setText("Minimum Amount");
        getContentPane().add(minAmountLabel);
        getContentPane().add(minAmountField);

        maxAmountLabel.setText("Maximum Amount");
        getContentPane().add(maxAmountLabel);
        getContentPane().add(maxAmountField);

        sortLabel.setText("Sorteaza Crescator dupa data");
        getContentPane().add(sortLabel);
        getContentPane().add(sortButton);

        tipLabel.setText("Tip Tranzactie");
        getContentPane().add(tipLabel);

        tipCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        tipCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tipComboActionPerformed(evt);
            }
        });
        getContentPane().add(tipCombo);

        OKButton.setText("OK");
        OKButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OKButtonActionPerformed(evt);
            }
        });
        getContentPane().add(OKButton);

        CancelButton.setText("Cancel");
        CancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelButtonActionPerformed(evt);
            }
        });
        getContentPane().add(CancelButton);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void OKButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OKButtonActionPerformed
        StringBuilder sb = new StringBuilder();
        String nume = numeField.getText();
        if(!nume.matches("[a-zA-Z\\s]*")){
            sb.append("Numele trebuie sa contina doar litere mari sau litere mici \n");
        }
        String minAmount = minAmountField.getText();
        double min =0 ;
        if(minAmount.isEmpty())
            min = 0;
        else{
            try{
                min = Double.parseDouble(minAmount);
                min = Bank.round(min, 2);
            }catch (NumberFormatException e){
                sb.append("Minimul trebuie sa fie un numar valid.\n");
            }
        }
        String maxAmount = maxAmountField.getText();
        double max =0 ;
        if (maxAmount.isEmpty())
            max = 100000000;
        else{
            try{
                max = Double.parseDouble(maxAmount);
                max = Bank.round(max,2);
            }catch (NumberFormatException e){
                sb.append("Maximul trebuie sa fie un numar valid.\n");
            }
        }
        boolean sortAsc = sortButton.isSelected();
        if(min>=max){
            sb.append("Minimul nu poate sa fie mai mare ca maximul!\n");
        }
        String tip = tipCombo.getSelectedItem().toString();
        
        if(!sb.isEmpty()){
            JOptionPane.showMessageDialog(this, sb.toString(),"Input Error!",JOptionPane.WARNING_MESSAGE);
        }else{
            filtru.setSearchTerm(nume.toLowerCase());
            filtru.setMaxValue(max);
            filtru.setMinValue(min);
            filtru.setDataAsc(sortAsc);
            filtru.setTip(tip);
            this.dispose(); 
        }
        

    }//GEN-LAST:event_OKButtonActionPerformed

    private void tipComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tipComboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tipComboActionPerformed

    private void numeFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_numeFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_numeFieldActionPerformed

    private void CancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelButtonActionPerformed
        this.dispose();
    }//GEN-LAST:event_CancelButtonActionPerformed

    /**
     * @param args the command line arguments
     */


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CancelButton;
    private javax.swing.JButton OKButton;
    private javax.swing.JTextField maxAmountField;
    private javax.swing.JLabel maxAmountLabel;
    private javax.swing.JTextField minAmountField;
    private javax.swing.JLabel minAmountLabel;
    private javax.swing.JTextField numeField;
    private javax.swing.JLabel numeLabel;
    private javax.swing.JRadioButton sortButton;
    private javax.swing.JLabel sortLabel;
    private javax.swing.JComboBox<String> tipCombo;
    private javax.swing.JLabel tipLabel;
    // End of variables declaration//GEN-END:variables
}
