/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package bankwithguianddb;

import java.math.BigDecimal;
import java.math.RoundingMode;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Andrei
 */
public class AddAccountMenu extends javax.swing.JDialog {
    private Customer customer;
    private Bank bank;
    /**
     * Creates new form AddAccountMenu
     */
    public AddAccountMenu(java.awt.Frame parent, boolean modal,Bank bank) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(parent);
        this.bank=bank;
        customer=null;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        firstNameLabel = new javax.swing.JLabel();
        firstNameField = new javax.swing.JTextField();
        lastNameLabel = new javax.swing.JLabel();
        lastNameField = new javax.swing.JTextField();
        cnpLabel = new javax.swing.JLabel();
        cnpField = new javax.swing.JTextField();
        initialDepositLabel = new javax.swing.JLabel();
        initialDepositField = new javax.swing.JTextField();
        typeLabel = new javax.swing.JLabel();
        typeField = new javax.swing.JComboBox<>();
        okButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Add Account Menu");
        setPreferredSize(new java.awt.Dimension(450, 350));
        setSize(new java.awt.Dimension(500, 500));
        getContentPane().setLayout(new java.awt.GridLayout(6, 2, 5, 0));

        firstNameLabel.setText("First Name:");
        getContentPane().add(firstNameLabel);

        firstNameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                firstNameFieldActionPerformed(evt);
            }
        });
        getContentPane().add(firstNameField);

        lastNameLabel.setText("Last Name:");
        getContentPane().add(lastNameLabel);

        lastNameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lastNameFieldActionPerformed(evt);
            }
        });
        getContentPane().add(lastNameField);

        cnpLabel.setText("CNP:");
        getContentPane().add(cnpLabel);
        getContentPane().add(cnpField);

        initialDepositLabel.setText("Initial deposit:");
        getContentPane().add(initialDepositLabel);
        getContentPane().add(initialDepositField);

        typeLabel.setText("Account Type:");
        getContentPane().add(typeLabel);

        typeField.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Checking ", "Savings" }));
        typeField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                typeFieldActionPerformed(evt);
            }
        });
        getContentPane().add(typeField);

        okButton.setText("OK");
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });
        getContentPane().add(okButton);

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });
        getContentPane().add(cancelButton);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void typeFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_typeFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_typeFieldActionPerformed

    private void firstNameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_firstNameFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_firstNameFieldActionPerformed

    private void lastNameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lastNameFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_lastNameFieldActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        this.dispose();
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        
        StringBuilder sb = new StringBuilder();
        String firstName = firstNameField.getText();
        String lastName = lastNameField.getText();
        String cnp = cnpField.getText();
        String initialDeposit = initialDepositField.getText();
        double deposit = 0;
        if(firstName.isEmpty()){
            sb.append("First name must not be empty.\n");
        }else if(!firstName.matches("[A-Z][a-z]*")){
            sb.append("First name must contain only letters,start with an uppercase letter and be at least 1 character long.\n");
        }
        if(lastName.isEmpty()){
            sb.append("Last name must not be empty.\n");
        }else if(!lastName.matches("[A-Z][a-z]*")){
            sb.append("Last name must contain only letters,start with an uppercase letter and be at least 1 character long.\n");
        }
        if(cnp.isEmpty()){
            sb.append("CNP must not be empty.\n");
        }else if(!cnp.matches("[0-9]{13}")){
            sb.append("CNP must contain only 13 digits.\n");
        }
        if(initialDeposit.isEmpty()){
            sb.append("Initial deposit must not be empty.\n");
        }else{
            try{
                deposit = Double.parseDouble(initialDeposit);
                deposit = Bank.round(deposit,2);
            }catch (NumberFormatException e){
                sb.append("Initial deposit must be a valid number.\n");
            }
        }      
        AccountType accountType = AccountType.Undefined;
        Account account = null;
            if("Checking".equals(typeField.getSelectedItem().toString().trim())){
                if(deposit>=100){
                accountType = AccountType.Checking;
                }else{
                    sb.append("Checking accounts require at least 100$ as an initial deposit.\n");
                } 
            }else if("Savings".equals(typeField.getSelectedItem().toString().trim())){
                if(deposit>=50){
                    accountType = AccountType.Savings;
                }else{
                    sb.append("Savings accounts require at least 50$ as an initial deposit.\n");
                } 
            }
        if(!sb.isEmpty()){
            JOptionPane.showMessageDialog(this, sb.toString(),"Input Error!",JOptionPane.WARNING_MESSAGE);
            return;
        }else{
            int accountId = bank.openAccount(firstName, lastName, cnp, accountType, deposit);
            customer = bank.getCustomer(accountId);
            this.dispose();
        }
      
    }//GEN-LAST:event_okButtonActionPerformed
    Customer getCustomer(){
        return customer;
    }

    /**
     * @param args the command line arguments
     */


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JTextField cnpField;
    private javax.swing.JLabel cnpLabel;
    private javax.swing.JTextField firstNameField;
    private javax.swing.JLabel firstNameLabel;
    private javax.swing.JTextField initialDepositField;
    private javax.swing.JLabel initialDepositLabel;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JTextField lastNameField;
    private javax.swing.JLabel lastNameLabel;
    private javax.swing.JButton okButton;
    private javax.swing.JComboBox<String> typeField;
    private javax.swing.JLabel typeLabel;
    // End of variables declaration//GEN-END:variables
}
