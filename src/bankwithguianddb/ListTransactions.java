/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package bankwithguianddb;

import java.util.ArrayList;
import java.util.stream.Collectors;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Andrei
 */
public class ListTransactions extends javax.swing.JFrame {

    private Bank bank;
    private Filtru filtru = null;
    /**
     * Creates new form ListTransactions
     */
    public ListTransactions(java.awt.Frame parent, boolean modal, Bank bank) {
        
        initComponents();
        setLocationRelativeTo(parent);
        this.bank=bank;
        this.filtru=FiltruSingleton.getFiltru();

        
        reloadTable();

    }

    public ArrayList<Transaction> filtreazaTranzactii(ArrayList<Transaction> tranzactii){
        tranzactii = (ArrayList<Transaction>) tranzactii.stream()
                .filter(t->t.getNume().toLowerCase().contains(filtru.getSearchTerm().toLowerCase()))
                .filter(t-> filtru.getMinValue()<=t.getAmount() && t.getAmount()<=filtru.getMaxValue() )
                .collect(Collectors.toList());
        if(filtru.getDataAsc()){
            tranzactii = (ArrayList<Transaction>) tranzactii.stream()
                    .sorted((t1,t2)->t1.getDataTranzactie().compareTo(t2.getDataTranzactie()))
                    .collect(Collectors.toList());
        }else{
            tranzactii = (ArrayList<Transaction>) tranzactii.stream()
                    .sorted((t1,t2)->t2.getDataTranzactie().compareTo(t1.getDataTranzactie()))
                    .collect(Collectors.toList());
        }
        if(filtru.getTip().compareTo("All")!=0){
            tranzactii = (ArrayList<Transaction>) tranzactii.stream()
                    .filter(t->t.getType().toString().compareTo(filtru.getTip())==0)
                    .collect(Collectors.toList());
        }
        return tranzactii;
    }
    
    private void reloadTable() {
        DefaultTableModel model = (DefaultTableModel) transactionTable.getModel();
        model.setRowCount(0);
        int row = 0;
        for (Transaction t : filtreazaTranzactii(bank.getAllTransactions())) {
            model.addRow(new Object[]{ t.getTxid() , t.getNume() , t.getType().toString(), t.getAmount() , t.getDataTranzactie().toString() });
            row++;
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        transactionTable = new javax.swing.JTable();
        OKButton = new javax.swing.JButton();
        filterButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Toate Tranzactiile");

        transactionTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "TXID", "Nume", "Tip Tranzactie", "Suma", "Data"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(transactionTable);

        OKButton.setText("OK");
        OKButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OKButtonActionPerformed(evt);
            }
        });

        filterButton.setText("Filter");
        filterButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filterButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 516, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(140, 140, 140)
                .addComponent(OKButton, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(filterButton, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(19, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(OKButton)
                    .addComponent(filterButton))
                .addGap(9, 9, 9))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void OKButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OKButtonActionPerformed
        this.dispose();
    }//GEN-LAST:event_OKButtonActionPerformed

    private void filterButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filterButtonActionPerformed
        FilterFields ffds;
        ffds = new FilterFields(this,true,filtru);
        ffds.setVisible(true);
        reloadTable();
    }//GEN-LAST:event_filterButtonActionPerformed

    /**
     * @param args the command line arguments
     */


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton OKButton;
    private javax.swing.JButton filterButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable transactionTable;
    // End of variables declaration//GEN-END:variables
}
